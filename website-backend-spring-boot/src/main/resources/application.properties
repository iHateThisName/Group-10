# Configure access to the Apache Derby database
spring.datasource.url=jdbc:derby:memory:local;create=true

#Creates the db in the current directory
#spring.datasource.url=jdbc:derby:directory:Database Files;create=true

# For Swagger to work
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created a fresh for every start of application
# But set to update to avoid annoying error message
spring.jpa.hibernate.ddl-auto=update

# Setting this to true just to avoid annoying error msg
# The error message happens because spring can't find a ddl file
spring.jpa.generate-ddl=true

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DerbyTenSevenDialect

# Shows the sql commands in a more reader friendly way
spring.jpa.properties.hibernate.format_sql=true

# This is needed to hot-reload the page without restarting the server when Thymeleaf templates are updated
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=file:src/main/resources/templates/
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.web.resources.cache.period=0
spring.web.resources.static-locations=file:src/main/resources/static/

#todo make it more secure later, maybe : https://medium.com/@sun30nil/how-to-secure-secrets-and-passwords-in-springboot-90c952961d9
DummyDataInitializer.user.password =$2a$10$J/turZUn6tfWRyKbzI3/Wer/FYLKlNJHMpKkO20oyA4Hd8OszOv5.
jwt.secret.key=verysecretkey